{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npx create-next-app:*)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(pip install:*)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(npm run dev:*)",
      "Bash(taskkill:*)",
      "Bash(cmd.exe:*)",
      "Bash(cat:*)",
      "Bash(cmd /c:*)",
      "Bash(dir backend frontend)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx tsc:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git rm:*)",
      "Bash(git filter-branch:*)",
      "Bash(set BACKEND_PORT=8001)",
      "Bash(del test_reference_file_feature.py test_api_reference_file.py)",
      "mcp__ide__getDiagnostics",
      "Bash(claude --version)",
      "Bash(sed:*)",
      "Bash(dir)",
      "Bash(del test_simple.ps1)",
      "Bash(dir:*)",
      "Bash(copy:*)",
      "Read(C:\\Users/**)",
      "Read(c:\\Users\\宜蓁同学\\Downloads/**)",
      "Bash(where python)",
      "Bash(C:UsersxmilesAppDataLocalProgramsPythonPython312python.exe -m pip install requests)",
      "Bash(\"C:\\Users\\xmiles\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -m pip install requests)",
      "Bash(\"C:\\Users\\xmiles\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" test_gitlab_integration.py)",
      "Bash(\"C:\\Users\\xmiles\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -m pip install python-dotenv)",
      "Bash(\"C:\\Users\\xmiles\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" debug_ssh_key.py)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(rd:*)",
      "Bash(wmic process where processid=17992 delete:*)",
      "Bash(powershell:*)"
    ],
    "deny": [],
    "additionalDirectories": [
      "E:\\e\\prompt_sys",
      "E:\\mnt\\e"
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); model=$(echo \"$input\" | jq -r '.model.display_name'); cwd=$(echo \"$input\" | jq -r '.workspace.current_dir'); branch=$(cd \"$cwd\" 2>/dev/null && git branch --show-current 2>/dev/null || echo 'no-git'); printf \"\\033[2m%s \\033[0m\\033[36m%s\\033[0m \\033[2m(%s)\\033[0m\" \"$model\" \"$(basename \"$cwd\")\" \"$branch\""
  }
}